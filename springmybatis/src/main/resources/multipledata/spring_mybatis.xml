<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">
	<!-- ========================================配置数据源========================================= -->
	<bean name="dataSource_1" class="org.apache.commons.dbcp2.BasicDataSource"
		 destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<property name="initialSize" value="0" />
		<property name="maxTotal" value="20" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWaitMillis" value="60000" />
		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" />  -->
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
	</bean>
	<bean name="dataSource_2" class="org.apache.commons.dbcp2.BasicDataSource"
		 destroy-method="close">
		<property name="url" value="${test2.jdbc_url}" />
		<property name="username" value="${test2.jdbc_username}" />
		<property name="password" value="${test2.jdbc_password}" />
		<property name="initialSize" value="0" />
		<property name="maxTotal" value="20" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWaitMillis" value="60000" />
		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" />  -->
		<property name="validationQuery" value="${test2.validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
	</bean>
	<!-- ========================================分隔线========================================= -->
	<!-- 配置多数据源  -->
	<bean id="multipleDataSource" class="study.hry.spring.mybatis.springmybatis.multipledata.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="dataSource_1"/>
        <property name="targetDataSources">
            <map>
                <entry key="test1" value-ref="dataSource_1"/>
                <entry key="test2" value-ref="dataSource_2"/>
            </map>
        </property>
    </bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath*:study/hry/spring/mybatis/springmybatis/multipledata/mapper/test1/*.xml</value>
				<value>classpath*:study/hry/spring/mybatis/springmybatis/multipledata/mapper/test2/*.xml</value>
			</list>
		</property>
		<!--  
		<property name="configLocation" value="classpath:multipledata/mybatis-config.xml"></property>
		-->
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="study.hry.spring.mybatis.springmybatis.multipledata.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	
</beans>